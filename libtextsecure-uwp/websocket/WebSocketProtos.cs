// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace libtextsecure.websocket {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class WebSocketProtos {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    private static pbd::MessageDescriptor internal__static_textsecure_WebSocketRequestMessage__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::libtextsecure.websocket.WebSocketProtos.WebSocketRequestMessage, global::libtextsecure.websocket.WebSocketProtos.WebSocketRequestMessage.Builder> internal__static_textsecure_WebSocketRequestMessage__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_textsecure_WebSocketResponseMessage__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::libtextsecure.websocket.WebSocketProtos.WebSocketResponseMessage, global::libtextsecure.websocket.WebSocketProtos.WebSocketResponseMessage.Builder> internal__static_textsecure_WebSocketResponseMessage__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_textsecure_WebSocketMessage__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::libtextsecure.websocket.WebSocketProtos.WebSocketMessage, global::libtextsecure.websocket.WebSocketProtos.WebSocketMessage.Builder> internal__static_textsecure_WebSocketMessage__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static WebSocketProtos() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhXZWJTb2NrZXRSZXNvdXJjZXMucHJvdG8SCnRleHRzZWN1cmUiTwoXV2Vi", 
            "U29ja2V0UmVxdWVzdE1lc3NhZ2USDAoEdmVyYhgBIAEoCRIMCgRwYXRoGAIg", 
            "ASgJEgwKBGJvZHkYAyABKAwSCgoCaWQYBCABKAQiVQoYV2ViU29ja2V0UmVz", 
            "cG9uc2VNZXNzYWdlEgoKAmlkGAEgASgEEg4KBnN0YXR1cxgCIAEoDRIPCgdt", 
            "ZXNzYWdlGAMgASgJEgwKBGJvZHkYBCABKAwi4QEKEFdlYlNvY2tldE1lc3Nh", 
            "Z2USLwoEdHlwZRgBIAEoDjIhLnRleHRzZWN1cmUuV2ViU29ja2V0TWVzc2Fn", 
            "ZS5UeXBlEjQKB3JlcXVlc3QYAiABKAsyIy50ZXh0c2VjdXJlLldlYlNvY2tl", 
            "dFJlcXVlc3RNZXNzYWdlEjYKCHJlc3BvbnNlGAMgASgLMiQudGV4dHNlY3Vy", 
            "ZS5XZWJTb2NrZXRSZXNwb25zZU1lc3NhZ2UiLgoEVHlwZRILCgdVTktOT1dO", 
            "EAASCwoHUkVRVUVTVBABEgwKCFJFU1BPTlNFEAJCQwowb3JnLndoaXNwZXJz", 
            "eXN0ZW1zLnRleHRzZWN1cmUuaW50ZXJuYWwud2Vic29ja2V0Qg9XZWJTb2Nr", 
          "ZXRQcm90b3M="));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_textsecure_WebSocketRequestMessage__Descriptor = Descriptor.MessageTypes[0];
        internal__static_textsecure_WebSocketRequestMessage__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::libtextsecure.websocket.WebSocketProtos.WebSocketRequestMessage, global::libtextsecure.websocket.WebSocketProtos.WebSocketRequestMessage.Builder>(internal__static_textsecure_WebSocketRequestMessage__Descriptor,
                new string[] { "Verb", "Path", "Body", "Id", });
        internal__static_textsecure_WebSocketResponseMessage__Descriptor = Descriptor.MessageTypes[1];
        internal__static_textsecure_WebSocketResponseMessage__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::libtextsecure.websocket.WebSocketProtos.WebSocketResponseMessage, global::libtextsecure.websocket.WebSocketProtos.WebSocketResponseMessage.Builder>(internal__static_textsecure_WebSocketResponseMessage__Descriptor,
                new string[] { "Id", "Status", "Message", "Body", });
        internal__static_textsecure_WebSocketMessage__Descriptor = Descriptor.MessageTypes[2];
        internal__static_textsecure_WebSocketMessage__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::libtextsecure.websocket.WebSocketProtos.WebSocketMessage, global::libtextsecure.websocket.WebSocketProtos.WebSocketMessage.Builder>(internal__static_textsecure_WebSocketMessage__Descriptor,
                new string[] { "Type", "Request", "Response", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
    #region Messages
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class WebSocketRequestMessage : pb::GeneratedMessage<WebSocketRequestMessage, WebSocketRequestMessage.Builder> {
      private WebSocketRequestMessage() { }
      private static readonly WebSocketRequestMessage defaultInstance = new WebSocketRequestMessage().MakeReadOnly();
      private static readonly string[] _webSocketRequestMessageFieldNames = new string[] { "body", "id", "path", "verb" };
      private static readonly uint[] _webSocketRequestMessageFieldTags = new uint[] { 26, 32, 18, 10 };
      public static WebSocketRequestMessage DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override WebSocketRequestMessage DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override WebSocketRequestMessage ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::libtextsecure.websocket.WebSocketProtos.internal__static_textsecure_WebSocketRequestMessage__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<WebSocketRequestMessage, WebSocketRequestMessage.Builder> InternalFieldAccessors {
        get { return global::libtextsecure.websocket.WebSocketProtos.internal__static_textsecure_WebSocketRequestMessage__FieldAccessorTable; }
      }
      
      public const int VerbFieldNumber = 1;
      private bool hasVerb;
      private string verb_ = "";
      public bool HasVerb {
        get { return hasVerb; }
      }
      public string Verb {
        get { return verb_; }
      }
      
      public const int PathFieldNumber = 2;
      private bool hasPath;
      private string path_ = "";
      public bool HasPath {
        get { return hasPath; }
      }
      public string Path {
        get { return path_; }
      }
      
      public const int BodyFieldNumber = 3;
      private bool hasBody;
      private pb::ByteString body_ = pb::ByteString.Empty;
      public bool HasBody {
        get { return hasBody; }
      }
      public pb::ByteString Body {
        get { return body_; }
      }
      
      public const int IdFieldNumber = 4;
      private bool hasId;
      private ulong id_;
      public bool HasId {
        get { return hasId; }
      }
      [global::System.CLSCompliant(false)]
      public ulong Id {
        get { return id_; }
      }
      
      public override bool IsInitialized {
        get {
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _webSocketRequestMessageFieldNames;
        if (hasVerb) {
          output.WriteString(1, field_names[3], Verb);
        }
        if (hasPath) {
          output.WriteString(2, field_names[2], Path);
        }
        if (hasBody) {
          output.WriteBytes(3, field_names[0], Body);
        }
        if (hasId) {
          output.WriteUInt64(4, field_names[1], Id);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasVerb) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Verb);
        }
        if (hasPath) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Path);
        }
        if (hasBody) {
          size += pb::CodedOutputStream.ComputeBytesSize(3, Body);
        }
        if (hasId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(4, Id);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static WebSocketRequestMessage ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static WebSocketRequestMessage ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static WebSocketRequestMessage ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static WebSocketRequestMessage ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static WebSocketRequestMessage ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static WebSocketRequestMessage ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static WebSocketRequestMessage ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static WebSocketRequestMessage ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static WebSocketRequestMessage ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static WebSocketRequestMessage ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private WebSocketRequestMessage MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(WebSocketRequestMessage prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<WebSocketRequestMessage, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(WebSocketRequestMessage cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private WebSocketRequestMessage result;
        
        private WebSocketRequestMessage PrepareBuilder() {
          if (resultIsReadOnly) {
            WebSocketRequestMessage original = result;
            result = new WebSocketRequestMessage();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override WebSocketRequestMessage MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::libtextsecure.websocket.WebSocketProtos.WebSocketRequestMessage.Descriptor; }
        }
        
        public override WebSocketRequestMessage DefaultInstanceForType {
          get { return global::libtextsecure.websocket.WebSocketProtos.WebSocketRequestMessage.DefaultInstance; }
        }
        
        public override WebSocketRequestMessage BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is WebSocketRequestMessage) {
            return MergeFrom((WebSocketRequestMessage) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(WebSocketRequestMessage other) {
          if (other == global::libtextsecure.websocket.WebSocketProtos.WebSocketRequestMessage.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasVerb) {
            Verb = other.Verb;
          }
          if (other.HasPath) {
            Path = other.Path;
          }
          if (other.HasBody) {
            Body = other.Body;
          }
          if (other.HasId) {
            Id = other.Id;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_webSocketRequestMessageFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _webSocketRequestMessageFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10: {
                result.hasVerb = input.ReadString(ref result.verb_);
                break;
              }
              case 18: {
                result.hasPath = input.ReadString(ref result.path_);
                break;
              }
              case 26: {
                result.hasBody = input.ReadBytes(ref result.body_);
                break;
              }
              case 32: {
                result.hasId = input.ReadUInt64(ref result.id_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasVerb {
          get { return result.hasVerb; }
        }
        public string Verb {
          get { return result.Verb; }
          set { SetVerb(value); }
        }
        public Builder SetVerb(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasVerb = true;
          result.verb_ = value;
          return this;
        }
        public Builder ClearVerb() {
          PrepareBuilder();
          result.hasVerb = false;
          result.verb_ = "";
          return this;
        }
        
        public bool HasPath {
          get { return result.hasPath; }
        }
        public string Path {
          get { return result.Path; }
          set { SetPath(value); }
        }
        public Builder SetPath(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasPath = true;
          result.path_ = value;
          return this;
        }
        public Builder ClearPath() {
          PrepareBuilder();
          result.hasPath = false;
          result.path_ = "";
          return this;
        }
        
        public bool HasBody {
          get { return result.hasBody; }
        }
        public pb::ByteString Body {
          get { return result.Body; }
          set { SetBody(value); }
        }
        public Builder SetBody(pb::ByteString value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasBody = true;
          result.body_ = value;
          return this;
        }
        public Builder ClearBody() {
          PrepareBuilder();
          result.hasBody = false;
          result.body_ = pb::ByteString.Empty;
          return this;
        }
        
        public bool HasId {
          get { return result.hasId; }
        }
        [global::System.CLSCompliant(false)]
        public ulong Id {
          get { return result.Id; }
          set { SetId(value); }
        }
        [global::System.CLSCompliant(false)]
        public Builder SetId(ulong value) {
          PrepareBuilder();
          result.hasId = true;
          result.id_ = value;
          return this;
        }
        public Builder ClearId() {
          PrepareBuilder();
          result.hasId = false;
          result.id_ = 0UL;
          return this;
        }
      }
      static WebSocketRequestMessage() {
        object.ReferenceEquals(global::libtextsecure.websocket.WebSocketProtos.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class WebSocketResponseMessage : pb::GeneratedMessage<WebSocketResponseMessage, WebSocketResponseMessage.Builder> {
      private WebSocketResponseMessage() { }
      private static readonly WebSocketResponseMessage defaultInstance = new WebSocketResponseMessage().MakeReadOnly();
      private static readonly string[] _webSocketResponseMessageFieldNames = new string[] { "body", "id", "message", "status" };
      private static readonly uint[] _webSocketResponseMessageFieldTags = new uint[] { 34, 8, 26, 16 };
      public static WebSocketResponseMessage DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override WebSocketResponseMessage DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override WebSocketResponseMessage ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::libtextsecure.websocket.WebSocketProtos.internal__static_textsecure_WebSocketResponseMessage__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<WebSocketResponseMessage, WebSocketResponseMessage.Builder> InternalFieldAccessors {
        get { return global::libtextsecure.websocket.WebSocketProtos.internal__static_textsecure_WebSocketResponseMessage__FieldAccessorTable; }
      }
      
      public const int IdFieldNumber = 1;
      private bool hasId;
      private ulong id_;
      public bool HasId {
        get { return hasId; }
      }
      [global::System.CLSCompliant(false)]
      public ulong Id {
        get { return id_; }
      }
      
      public const int StatusFieldNumber = 2;
      private bool hasStatus;
      private uint status_;
      public bool HasStatus {
        get { return hasStatus; }
      }
      [global::System.CLSCompliant(false)]
      public uint Status {
        get { return status_; }
      }
      
      public const int MessageFieldNumber = 3;
      private bool hasMessage;
      private string message_ = "";
      public bool HasMessage {
        get { return hasMessage; }
      }
      public string Message {
        get { return message_; }
      }
      
      public const int BodyFieldNumber = 4;
      private bool hasBody;
      private pb::ByteString body_ = pb::ByteString.Empty;
      public bool HasBody {
        get { return hasBody; }
      }
      public pb::ByteString Body {
        get { return body_; }
      }
      
      public override bool IsInitialized {
        get {
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _webSocketResponseMessageFieldNames;
        if (hasId) {
          output.WriteUInt64(1, field_names[1], Id);
        }
        if (hasStatus) {
          output.WriteUInt32(2, field_names[3], Status);
        }
        if (hasMessage) {
          output.WriteString(3, field_names[2], Message);
        }
        if (hasBody) {
          output.WriteBytes(4, field_names[0], Body);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, Id);
        }
        if (hasStatus) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, Status);
        }
        if (hasMessage) {
          size += pb::CodedOutputStream.ComputeStringSize(3, Message);
        }
        if (hasBody) {
          size += pb::CodedOutputStream.ComputeBytesSize(4, Body);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static WebSocketResponseMessage ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static WebSocketResponseMessage ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static WebSocketResponseMessage ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static WebSocketResponseMessage ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static WebSocketResponseMessage ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static WebSocketResponseMessage ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static WebSocketResponseMessage ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static WebSocketResponseMessage ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static WebSocketResponseMessage ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static WebSocketResponseMessage ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private WebSocketResponseMessage MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(WebSocketResponseMessage prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<WebSocketResponseMessage, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(WebSocketResponseMessage cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private WebSocketResponseMessage result;
        
        private WebSocketResponseMessage PrepareBuilder() {
          if (resultIsReadOnly) {
            WebSocketResponseMessage original = result;
            result = new WebSocketResponseMessage();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override WebSocketResponseMessage MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::libtextsecure.websocket.WebSocketProtos.WebSocketResponseMessage.Descriptor; }
        }
        
        public override WebSocketResponseMessage DefaultInstanceForType {
          get { return global::libtextsecure.websocket.WebSocketProtos.WebSocketResponseMessage.DefaultInstance; }
        }
        
        public override WebSocketResponseMessage BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is WebSocketResponseMessage) {
            return MergeFrom((WebSocketResponseMessage) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(WebSocketResponseMessage other) {
          if (other == global::libtextsecure.websocket.WebSocketProtos.WebSocketResponseMessage.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasId) {
            Id = other.Id;
          }
          if (other.HasStatus) {
            Status = other.Status;
          }
          if (other.HasMessage) {
            Message = other.Message;
          }
          if (other.HasBody) {
            Body = other.Body;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_webSocketResponseMessageFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _webSocketResponseMessageFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasId = input.ReadUInt64(ref result.id_);
                break;
              }
              case 16: {
                result.hasStatus = input.ReadUInt32(ref result.status_);
                break;
              }
              case 26: {
                result.hasMessage = input.ReadString(ref result.message_);
                break;
              }
              case 34: {
                result.hasBody = input.ReadBytes(ref result.body_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasId {
          get { return result.hasId; }
        }
        [global::System.CLSCompliant(false)]
        public ulong Id {
          get { return result.Id; }
          set { SetId(value); }
        }
        [global::System.CLSCompliant(false)]
        public Builder SetId(ulong value) {
          PrepareBuilder();
          result.hasId = true;
          result.id_ = value;
          return this;
        }
        public Builder ClearId() {
          PrepareBuilder();
          result.hasId = false;
          result.id_ = 0UL;
          return this;
        }
        
        public bool HasStatus {
          get { return result.hasStatus; }
        }
        [global::System.CLSCompliant(false)]
        public uint Status {
          get { return result.Status; }
          set { SetStatus(value); }
        }
        [global::System.CLSCompliant(false)]
        public Builder SetStatus(uint value) {
          PrepareBuilder();
          result.hasStatus = true;
          result.status_ = value;
          return this;
        }
        public Builder ClearStatus() {
          PrepareBuilder();
          result.hasStatus = false;
          result.status_ = 0;
          return this;
        }
        
        public bool HasMessage {
          get { return result.hasMessage; }
        }
        public string Message {
          get { return result.Message; }
          set { SetMessage(value); }
        }
        public Builder SetMessage(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasMessage = true;
          result.message_ = value;
          return this;
        }
        public Builder ClearMessage() {
          PrepareBuilder();
          result.hasMessage = false;
          result.message_ = "";
          return this;
        }
        
        public bool HasBody {
          get { return result.hasBody; }
        }
        public pb::ByteString Body {
          get { return result.Body; }
          set { SetBody(value); }
        }
        public Builder SetBody(pb::ByteString value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasBody = true;
          result.body_ = value;
          return this;
        }
        public Builder ClearBody() {
          PrepareBuilder();
          result.hasBody = false;
          result.body_ = pb::ByteString.Empty;
          return this;
        }
      }
      static WebSocketResponseMessage() {
        object.ReferenceEquals(global::libtextsecure.websocket.WebSocketProtos.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class WebSocketMessage : pb::GeneratedMessage<WebSocketMessage, WebSocketMessage.Builder> {
      private WebSocketMessage() { }
      private static readonly WebSocketMessage defaultInstance = new WebSocketMessage().MakeReadOnly();
      private static readonly string[] _webSocketMessageFieldNames = new string[] { "request", "response", "type" };
      private static readonly uint[] _webSocketMessageFieldTags = new uint[] { 18, 26, 8 };
      public static WebSocketMessage DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override WebSocketMessage DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override WebSocketMessage ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::libtextsecure.websocket.WebSocketProtos.internal__static_textsecure_WebSocketMessage__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<WebSocketMessage, WebSocketMessage.Builder> InternalFieldAccessors {
        get { return global::libtextsecure.websocket.WebSocketProtos.internal__static_textsecure_WebSocketMessage__FieldAccessorTable; }
      }
      
      #region Nested types
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public static partial class Types {
        public enum Type {
          UNKNOWN = 0,
          REQUEST = 1,
          RESPONSE = 2,
        }
        
      }
      #endregion
      
      public const int TypeFieldNumber = 1;
      private bool hasType;
      private global::libtextsecure.websocket.WebSocketProtos.WebSocketMessage.Types.Type type_ = global::libtextsecure.websocket.WebSocketProtos.WebSocketMessage.Types.Type.UNKNOWN;
      public bool HasType {
        get { return hasType; }
      }
      public global::libtextsecure.websocket.WebSocketProtos.WebSocketMessage.Types.Type Type {
        get { return type_; }
      }
      
      public const int RequestFieldNumber = 2;
      private bool hasRequest;
      private global::libtextsecure.websocket.WebSocketProtos.WebSocketRequestMessage request_;
      public bool HasRequest {
        get { return hasRequest; }
      }
      public global::libtextsecure.websocket.WebSocketProtos.WebSocketRequestMessage Request {
        get { return request_ ?? global::libtextsecure.websocket.WebSocketProtos.WebSocketRequestMessage.DefaultInstance; }
      }
      
      public const int ResponseFieldNumber = 3;
      private bool hasResponse;
      private global::libtextsecure.websocket.WebSocketProtos.WebSocketResponseMessage response_;
      public bool HasResponse {
        get { return hasResponse; }
      }
      public global::libtextsecure.websocket.WebSocketProtos.WebSocketResponseMessage Response {
        get { return response_ ?? global::libtextsecure.websocket.WebSocketProtos.WebSocketResponseMessage.DefaultInstance; }
      }
      
      public override bool IsInitialized {
        get {
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _webSocketMessageFieldNames;
        if (hasType) {
          output.WriteEnum(1, field_names[2], (int) Type, Type);
        }
        if (hasRequest) {
          output.WriteMessage(2, field_names[0], Request);
        }
        if (hasResponse) {
          output.WriteMessage(3, field_names[1], Response);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasType) {
          size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Type);
        }
        if (hasRequest) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Request);
        }
        if (hasResponse) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Response);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static WebSocketMessage ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static WebSocketMessage ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static WebSocketMessage ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static WebSocketMessage ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static WebSocketMessage ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static WebSocketMessage ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static WebSocketMessage ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static WebSocketMessage ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static WebSocketMessage ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static WebSocketMessage ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private WebSocketMessage MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(WebSocketMessage prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<WebSocketMessage, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(WebSocketMessage cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private WebSocketMessage result;
        
        private WebSocketMessage PrepareBuilder() {
          if (resultIsReadOnly) {
            WebSocketMessage original = result;
            result = new WebSocketMessage();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override WebSocketMessage MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::libtextsecure.websocket.WebSocketProtos.WebSocketMessage.Descriptor; }
        }
        
        public override WebSocketMessage DefaultInstanceForType {
          get { return global::libtextsecure.websocket.WebSocketProtos.WebSocketMessage.DefaultInstance; }
        }
        
        public override WebSocketMessage BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is WebSocketMessage) {
            return MergeFrom((WebSocketMessage) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(WebSocketMessage other) {
          if (other == global::libtextsecure.websocket.WebSocketProtos.WebSocketMessage.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasType) {
            Type = other.Type;
          }
          if (other.HasRequest) {
            MergeRequest(other.Request);
          }
          if (other.HasResponse) {
            MergeResponse(other.Response);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_webSocketMessageFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _webSocketMessageFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                object unknown;
                if(input.ReadEnum(ref result.type_, out unknown)) {
                  result.hasType = true;
                } else if(unknown is int) {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  unknownFields.MergeVarintField(1, (ulong)(int)unknown);
                }
                break;
              }
              case 18: {
                global::libtextsecure.websocket.WebSocketProtos.WebSocketRequestMessage.Builder subBuilder = global::libtextsecure.websocket.WebSocketProtos.WebSocketRequestMessage.CreateBuilder();
                if (result.hasRequest) {
                  subBuilder.MergeFrom(Request);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                Request = subBuilder.BuildPartial();
                break;
              }
              case 26: {
                global::libtextsecure.websocket.WebSocketProtos.WebSocketResponseMessage.Builder subBuilder = global::libtextsecure.websocket.WebSocketProtos.WebSocketResponseMessage.CreateBuilder();
                if (result.hasResponse) {
                  subBuilder.MergeFrom(Response);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                Response = subBuilder.BuildPartial();
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasType {
         get { return result.hasType; }
        }
        public global::libtextsecure.websocket.WebSocketProtos.WebSocketMessage.Types.Type Type {
          get { return result.Type; }
          set { SetType(value); }
        }
        public Builder SetType(global::libtextsecure.websocket.WebSocketProtos.WebSocketMessage.Types.Type value) {
          PrepareBuilder();
          result.hasType = true;
          result.type_ = value;
          return this;
        }
        public Builder ClearType() {
          PrepareBuilder();
          result.hasType = false;
          result.type_ = global::libtextsecure.websocket.WebSocketProtos.WebSocketMessage.Types.Type.UNKNOWN;
          return this;
        }
        
        public bool HasRequest {
         get { return result.hasRequest; }
        }
        public global::libtextsecure.websocket.WebSocketProtos.WebSocketRequestMessage Request {
          get { return result.Request; }
          set { SetRequest(value); }
        }
        public Builder SetRequest(global::libtextsecure.websocket.WebSocketProtos.WebSocketRequestMessage value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasRequest = true;
          result.request_ = value;
          return this;
        }
        public Builder SetRequest(global::libtextsecure.websocket.WebSocketProtos.WebSocketRequestMessage.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasRequest = true;
          result.request_ = builderForValue.Build();
          return this;
        }
        public Builder MergeRequest(global::libtextsecure.websocket.WebSocketProtos.WebSocketRequestMessage value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasRequest &&
              result.request_ != global::libtextsecure.websocket.WebSocketProtos.WebSocketRequestMessage.DefaultInstance) {
              result.request_ = global::libtextsecure.websocket.WebSocketProtos.WebSocketRequestMessage.CreateBuilder(result.request_).MergeFrom(value).BuildPartial();
          } else {
            result.request_ = value;
          }
          result.hasRequest = true;
          return this;
        }
        public Builder ClearRequest() {
          PrepareBuilder();
          result.hasRequest = false;
          result.request_ = null;
          return this;
        }
        
        public bool HasResponse {
         get { return result.hasResponse; }
        }
        public global::libtextsecure.websocket.WebSocketProtos.WebSocketResponseMessage Response {
          get { return result.Response; }
          set { SetResponse(value); }
        }
        public Builder SetResponse(global::libtextsecure.websocket.WebSocketProtos.WebSocketResponseMessage value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasResponse = true;
          result.response_ = value;
          return this;
        }
        public Builder SetResponse(global::libtextsecure.websocket.WebSocketProtos.WebSocketResponseMessage.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasResponse = true;
          result.response_ = builderForValue.Build();
          return this;
        }
        public Builder MergeResponse(global::libtextsecure.websocket.WebSocketProtos.WebSocketResponseMessage value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasResponse &&
              result.response_ != global::libtextsecure.websocket.WebSocketProtos.WebSocketResponseMessage.DefaultInstance) {
              result.response_ = global::libtextsecure.websocket.WebSocketProtos.WebSocketResponseMessage.CreateBuilder(result.response_).MergeFrom(value).BuildPartial();
          } else {
            result.response_ = value;
          }
          result.hasResponse = true;
          return this;
        }
        public Builder ClearResponse() {
          PrepareBuilder();
          result.hasResponse = false;
          result.response_ = null;
          return this;
        }
      }
      static WebSocketMessage() {
        object.ReferenceEquals(global::libtextsecure.websocket.WebSocketProtos.Descriptor, null);
      }
    }
    
    #endregion
    
  }
}

#endregion Designer generated code
